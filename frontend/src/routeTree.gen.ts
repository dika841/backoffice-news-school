/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutAuthRouteImport } from './routes/_layout-auth'
import { Route as LayoutAuthIndexRouteImport } from './routes/_layout-auth.index'
import { Route as DashboardDashboardRouteImport } from './routes/dashboard/_dashboard'
import { Route as DashboardDashboardIndexRouteImport } from './routes/dashboard/_dashboard.index'
import { Route as DashboardNewsDashboardCreateRouteImport } from './routes/dashboard/news/_dashboard.create'

const DashboardRouteImport = createFileRoute('/dashboard')()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutAuthRoute = LayoutAuthRouteImport.update({
  id: '/_layout-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutAuthIndexRoute = LayoutAuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutAuthRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardIndexRoute = DashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any)
const DashboardNewsDashboardCreateRoute =
  DashboardNewsDashboardCreateRouteImport.update({
    id: '/news/_dashboard/create',
    path: '/news/create',
    getParentRoute: () => DashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/': typeof LayoutAuthIndexRoute
  '/dashboard/': typeof DashboardDashboardIndexRoute
  '/dashboard/news/create': typeof DashboardNewsDashboardCreateRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardDashboardIndexRoute
  '/': typeof LayoutAuthIndexRoute
  '/dashboard/news/create': typeof DashboardNewsDashboardCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout-auth': typeof LayoutAuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren
  '/_layout-auth/': typeof LayoutAuthIndexRoute
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexRoute
  '/dashboard/news/_dashboard/create': typeof DashboardNewsDashboardCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboard' | '/' | '/dashboard/' | '/dashboard/news/create'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard' | '/' | '/dashboard/news/create'
  id:
    | '__root__'
    | '/_layout-auth'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/_layout-auth/'
    | '/dashboard/_dashboard/'
    | '/dashboard/news/_dashboard/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutAuthRoute: typeof LayoutAuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout-auth': {
      id: '/_layout-auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout-auth/': {
      id: '/_layout-auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutAuthIndexRouteImport
      parentRoute: typeof LayoutAuthRoute
    }
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
    '/dashboard/news/_dashboard/create': {
      id: '/dashboard/news/_dashboard/create'
      path: '/news/create'
      fullPath: '/dashboard/news/create'
      preLoaderRoute: typeof DashboardNewsDashboardCreateRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface LayoutAuthRouteChildren {
  LayoutAuthIndexRoute: typeof LayoutAuthIndexRoute
}

const LayoutAuthRouteChildren: LayoutAuthRouteChildren = {
  LayoutAuthIndexRoute: LayoutAuthIndexRoute,
}

const LayoutAuthRouteWithChildren = LayoutAuthRoute._addFileChildren(
  LayoutAuthRouteChildren,
)

interface DashboardDashboardRouteChildren {
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
  DashboardNewsDashboardCreateRoute: typeof DashboardNewsDashboardCreateRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
  DashboardNewsDashboardCreateRoute: DashboardNewsDashboardCreateRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutAuthRoute: LayoutAuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
